{"version":3,"file":"static/webpack/static/development/pages/index.js.a8b7991f6dc59b5a35e2.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { usePlaceCage } from '../../';\n\nexport default function Index() {\n  const nickSingle = usePlaceCage(400, 300);\n  console.log('nickSingle', nickSingle)\n\n  const nickClones = usePlaceCage({\n    width: 300,\n    height: 300,\n    count: 5\n  });\n\n\n\n  const nickFriends = usePlaceCage([\n    {\n      width: 100,\n      height: 200,\n      count: 1\n    },\n    {\n      width: 110,\n      height: 200,\n      count: 1\n    },\n    {\n      width: 120,\n      height: 200,\n      count: 1\n    },\n    {\n      width: 130,\n      height: 200,\n      count: 1\n    },\n    {\n      width: 140,\n      height: 200,\n      count: 1\n    },\n    {\n      width: 150,\n      height: 200,\n      count: 1\n    }\n  ]);\n\n\n\n  return (\n    <div className=\"cage\">\n      <style jsx>{`\n        img {\n          max-width: 100%;\n        }\n\n        pre {\n          overflow: auto;\n          max-height: 15em;\n          background-color: #eeeeee;\n          padding: 1em;\n        }\n\n        .cage {\n          font-family: sans-serif;\n        }\n\n        .cage ul {\n          display: flex;\n          list-style: none;\n          padding: 0;\n          margin: 1em 0;\n        }\n      `}</style>\n      <h1>usePlaceCage</h1>\n\n      <p>\n        React hook for generating a many wonderful instance of Nicolas Cage\n        via <a href=\"https://www.placecage.com/\">placecage.com</a>\n      </p>\n\n      <h2>Examples</h2>\n\n      <h3>Single Nick</h3>\n      <pre>\n        <code>\n{`const nickSingle = usePlaceCage(400, 300);`}\n        </code>\n      </pre>\n      <ul>\n        <li>\n          <img width=\"400\" height=\"300\" src={nickSingle} loading=\"lazy\" alt=\"It is Nic!\" />\n        </li>\n      </ul>\n\n      <h3>Nick with his clones</h3>\n      <pre>\n        <code>\n{`const nickClones = usePlaceCage({\n  width: 300,\n  height: 300,\n  count: 5\n});`}\n        </code>\n      </pre>\n      <ul>\n        { nickClones.map((c, i) => {\n          return (\n            <li key={`nickFriends-${i}`}>\n              <img width=\"300\" height=\"300\" src={c} loading=\"lazy\" alt=\"It is Nic!\" />\n            </li>\n          )\n        })}\n      </ul>\n\n      <h3>Nick with friends</h3>\n      <pre>\n        <code>\n{`const nickFriends = usePlaceCage([\n  {\n    width: 100,\n    height: 200,\n    count: 1\n  },\n  {\n    width: 110,\n    height: 200,\n    count: 1\n  },\n  {\n    width: 120,\n    height: 200,\n    count: 1\n  },\n  {\n    width: 130,\n    height: 200,\n    count: 1\n  },\n  {\n    width: 140,\n    height: 200,\n    count: 1\n  },\n  {\n    width: 150,\n    height: 200,\n    count: 1\n  }\n]);`}\n        </code>\n      </pre>\n      <ul>\n        { nickFriends.map((friends, friendsIndex) => {\n          return friends.map((friend, friendIndex) => {\n            return (\n              <li key={`nickFriends${friendsIndex}-${friendIndex}`}>\n                <img width=\"300\" height=\"300\" src={friend} loading=\"lazy\" alt=\"It is Nic!\" />\n              </li>\n            )\n          });\n        })}\n      </ul>\n    </div>\n  );\n\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAQA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAKA;;;;A","sourceRoot":""}