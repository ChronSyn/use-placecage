{"version":3,"file":"static/webpack/static/development/pages/index.js.1eb22c22443c22a7e9f4.hot-update.js","sources":["webpack:///../usePlaceCage.js"],"sourcesContent":["const PLACECAGE_HOST = 'https://www.placecage.com/';\nconst TYPES = {\n  calm: 'c',\n  gracy: 'g',\n  crazy: 'c',\n  gif: 'gif'\n};\nconst DEFAULT_TYPE = 'calm';\nconst ERROR_BASE = 'Failed to place Nick';\nexport default function usePlaceCage(settings = {}) {\n  if (!isNaN(settings)) {\n    return generateCage({\n      width: arguments[0],\n      height: arguments[1]\n    })[0];\n  }\n\n  if (Array.isArray(settings)) {\n    return settings.map(s => generateCage(s));\n  }\n\n  return generateCage(settings);\n}\n/**\n * generateCage\n */\n\nfunction generateCage(settings) {\n  const {\n    type = DEFAULT_TYPE,\n    width = 200,\n    height = 200,\n    count = 1\n  } = settings;\n  const config = [];\n\n  if (type !== DEFAULT_TYPE && TYPES.includes(type)) {\n    config.push(type);\n  }\n\n  config.push(width, height);\n\n  if (isNaN(count)) {\n    throw new Error(`${ERROR_BASE}: Invalid count ${count}`);\n  }\n\n  return [...new Array(count)].map(() => `${PLACECAGE_HOST}${config.join('/')}`);\n}"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}